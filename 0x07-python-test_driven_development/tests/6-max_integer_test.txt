#!/usr/bin/python3
"""Unittest for max_integer([..])
"""
import unittest
max_integer = __import__('6-max_integer').max_integer

class TestMaxInteger(unittest.TestCase):
    """
    Test cases for the max_integer function
    """

    def test_empty_list(self):
        """
        Test with an empty list
        """
        self.assertIsNone(max_integer([]))

    def test_single_element(self):
        """
        Test with a list containing a single element
        """
        self.assertEqual(max_integer([5]), 5)

    def test_positive_numbers(self):
        """
        Test with a list of positive numbers
        """
        self.assertEqual(max_integer([1, 2, 3, 4]), 4)

    def test_negative_numbers(self):
        """
        Test with a list of negative numbers
        """
        self.assertEqual(max_integer([-4, -3, -2, -1]), -1)

    def test_mixed_numbers(self):
        """
        Test with a list of mixed positive and negative numbers
        """
        self.assertEqual(max_integer([-3, 2, -5, 1]), 2)

    def test_duplicate_numbers(self):
        """
        Test with a list containing duplicate numbers
        """
        self.assertEqual(max_integer([3, 3, 3, 3]), 3)

    def test_float_numbers(self):
        """
        Test with a list containing float numbers
        """
        self.assertEqual(max_integer([1.5, 2.5, 3.5]), 3.5)

    def test_invalid_input(self):
        """
        Test with an invalid input (non-numeric values)
        """
        with self.assertRaises(TypeError):
            max_integer([1, 2, '3', 4])

if __name__ == '__main__':
    unittest.main()
